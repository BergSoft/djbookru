[
  {
    "pk": 1,
    "model": "djangobb_forum.post",
    "fields": {
      "body": "\u0412 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u043f\u0435\u0440\u0435\u0440\u0430\u0431\u043e\u0442\u043a\u0438 HTML5 \u0430\u043f\u043b\u043e\u0430\u0434\u0435\u0440\u0430 \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a \u043f\u0440\u0438\u0448\u043b\u043e\u0441\u044c \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0432 \u0411\u0414. \u0418\u0437-\u0437\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u043f\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043d\u0430 \u043d\u043e\u0432\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0431\u044b\u043b \u0432\u044b\u0431\u0440\u0430\u043d \u043f\u0443\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438.\r\n\r\n\u0412\u043e\u0442 \u043a\u0430\u043a \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043d\u043e\u0432\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c:\r\n\r\n    # models.py\r\n\r\n    def upload_by_conditions(instance, filename):\r\n        u\"\"\"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0443\u0442\u044c \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u0435\u0433\u043e \u0442\u0438\u043f \u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\"\"\"\r\n        return u'uploader/media/%s/%s' % (instance.uploaded_for.code, filename)\r\n\r\n\r\n    RESOURCE_UNKNOWN = 0\r\n    RESOURCE_IMAGE = 1\r\n    RESOURCE_LAYOUT = 2\r\n    RESOURCE_CHOICES = (\r\n        (RESOURCE_UNKNOWN, _(u'Unknown')),\r\n        (RESOURCE_IMAGE, _(u'Image')),\r\n        (RESOURCE_LAYOUT, _(u'Layout')),\r\n    )\r\n\r\n    MIMETYPE_IMAGES = ('image/jpeg', 'image/png', )\r\n    MIMETYPE_LAYOUTS = ('image/gif', )\r\n\r\n\r\n    class Resource(models.Model):\r\n        kind = models.PositiveIntegerField(choices=RESOURCE_CHOICES, default=RESOURCE_UNKNOWN, verbose_name=_(u'Type'))\r\n        resource = models.FileField(upload_to=upload_by_conditions, max_length=256, verbose_name=_(u'Resource'))\r\n        file_name = models.CharField(max_length=256, verbose_name=pgettext_lazy(u'uploader', u'Name'))\r\n        file_type = models.CharField(max_length=80, verbose_name=_(u'MIME'))\r\n        file_size = models.PositiveIntegerField(default=0, verbose_name=pgettext_lazy(u'uploader', u'Size'))\r\n        position = models.PositiveIntegerField(default=0, verbose_name=_(u'Position'))\r\n        is_visible = models.BooleanField(default=False, verbose_name=_(u'Visible for anonymous'))\r\n        is_staff = models.BooleanField(default=False, verbose_name=_(u'Visible for staff'))\r\n        is_teaser = models.BooleanField(default=False, verbose_name=_(u'Used for presentation'))\r\n        uploaded_for = models.ForeignKey('storage.Project', related_name=u'resource', verbose_name=pgettext_lazy(u'uploader', u'Uploaded For'))\r\n        uploaded_by = models.ForeignKey('auth.User', related_name=u'uploaded_by', verbose_name=pgettext_lazy(u'uploader', u'Uploaded By'))\r\n        uploaded_at = models.DateTimeField(auto_now_add=True)\r\n\r\n        class Meta:\r\n            ordering = ('-uploaded_at', )\r\n            verbose_name = _(u'Resource')\r\n            verbose_name_plural = _(u'Resources')\r\n\r\n\u041a\u0430\u043a \u0432\u0438\u0434\u043d\u043e, \u043f\u0443\u0442\u044c \u0434\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443 (\u043d\u0435 PK) \u043f\u0440\u043e\u0435\u043a\u0442\u0430.\r\n\r\n\u041c\u0438\u0433\u0440\u0430\u0446\u0438\u044f \u0441\u0434\u0435\u043b\u0430\u043d\u0430 \u043f\u0440\u043e\u0441\u0442\u043e -- \u0447\u0438\u0442\u0430\u0435\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0435\u0433\u043e \u0432 \u043d\u043e\u0432\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c.\r\n\r\n    # migration.py\r\n\r\n    class Migration(DataMigration):\r\n\r\n        def forwards(self, orm):\r\n            src = orm['uploader.Queue']\r\n            dst = orm['uploader.Resource']\r\n            model = orm['storage.Project']\r\n            for item in src.objects.all():\r\n                project = model.objects.get(code=item.tags)\r\n                obj = dst(\r\n                    kind=RESOURCE_IMAGE,\r\n                    file_name=item.file_name,\r\n                    file_type=item.file_type,\r\n                    file_size=item.file_size,\r\n                    position=item.position,\r\n                    is_visible=item.visible,\r\n                    is_staff=item.staff,\r\n                    is_teaser=item.teaser,\r\n                    uploaded_for=project,\r\n                    uploaded_by=item.uploaded_by,\r\n                    uploaded_at=item.registered\r\n                )\r\n                obj.resource.save(item.file_name, item.image, save=True)\r\n\r\n\u0412\u0441\u0451 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e, \u043a\u0440\u043e\u043c\u0435 \u043e\u0434\u043d\u043e\u0433\u043e. \u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 ``settings.MEDIA_ROOT``, \u043d\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432. \u041f\u043e\u0445\u043e\u0436\u0435, \u0447\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f ``upload_by_conditions`` \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438. \u041f\u0440\u0438\u0447\u0438\u043d\u0443 \u0442\u0430\u043a\u043e\u0433\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u043a\u0430 \u043e\u0441\u043e\u0437\u043d\u0430\u0442\u044c \u043d\u0435 \u043c\u043e\u0433\u0443.\r\n\r\n\u0415\u0441\u0442\u044c \u0438\u0434\u0435\u0438?",
      "user_ip": "127.0.0.1",
      "updated": null,
      "updated_by": null,
      "created": "2012-12-13T11:43:34.795Z",
      "markup": "markdown",
      "body_html": "<p>\u0412 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u043f\u0435\u0440\u0435\u0440\u0430\u0431\u043e\u0442\u043a\u0438 HTML5 \u0430\u043f\u043b\u043e\u0430\u0434\u0435\u0440\u0430 \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a \u043f\u0440\u0438\u0448\u043b\u043e\u0441\u044c \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0432 \u0411\u0414. \u0418\u0437-\u0437\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u043f\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043d\u0430 \u043d\u043e\u0432\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0431\u044b\u043b \u0432\u044b\u0431\u0440\u0430\u043d \u043f\u0443\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438.</p>\n<p>\u0412\u043e\u0442 \u043a\u0430\u043a \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043d\u043e\u0432\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c:</p>\n<pre><code># models.py\n\ndef upload_by_conditions(instance, filename):\n    u\"\"\"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0443\u0442\u044c \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u0435\u0433\u043e \u0442\u0438\u043f \u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\"\"\"\n    return u'uploader/media/%s/%s' % (instance.uploaded_for.code, filename)\n\nRESOURCE_UNKNOWN = 0\nRESOURCE_IMAGE = 1\nRESOURCE_LAYOUT = 2\nRESOURCE_CHOICES = (\n    (RESOURCE_UNKNOWN, _(u'Unknown')),\n    (RESOURCE_IMAGE, _(u'Image')),\n    (RESOURCE_LAYOUT, _(u'Layout')),\n)\n\nMIMETYPE_IMAGES = ('image/jpeg', 'image/png', )\nMIMETYPE_LAYOUTS = ('image/gif', )\n\nclass Resource(models.Model):\n    kind = models.PositiveIntegerField(choices=RESOURCE_CHOICES, default=RESOURCE_UNKNOWN, verbose_name=_(u'Type'))\n    resource = models.FileField(upload_to=upload_by_conditions, max_length=256, verbose_name=_(u'Resource'))\n    file_name = models.CharField(max_length=256, verbose_name=pgettext_lazy(u'uploader', u'Name'))\n    file_type = models.CharField(max_length=80, verbose_name=_(u'MIME'))\n    file_size = models.PositiveIntegerField(default=0, verbose_name=pgettext_lazy(u'uploader', u'Size'))\n    position = models.PositiveIntegerField(default=0, verbose_name=_(u'Position'))\n    is_visible = models.BooleanField(default=False, verbose_name=_(u'Visible for anonymous'))\n    is_staff = models.BooleanField(default=False, verbose_name=_(u'Visible for staff'))\n    is_teaser = models.BooleanField(default=False, verbose_name=_(u'Used for presentation'))\n    uploaded_for = models.ForeignKey('storage.Project', related_name=u'resource', verbose_name=pgettext_lazy(u'uploader', u'Uploaded For'))\n    uploaded_by = models.ForeignKey('auth.User', related_name=u'uploaded_by', verbose_name=pgettext_lazy(u'uploader', u'Uploaded By'))\n    uploaded_at = models.DateTimeField(auto_now_add=True)\n\n    class Meta:\n        ordering = ('-uploaded_at', )\n        verbose_name = _(u'Resource')\n        verbose_name_plural = _(u'Resources')\n</code></pre>\n<p>\u041a\u0430\u043a \u0432\u0438\u0434\u043d\u043e, \u043f\u0443\u0442\u044c \u0434\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443 (\u043d\u0435 PK) \u043f\u0440\u043e\u0435\u043a\u0442\u0430.</p>\n<p>\u041c\u0438\u0433\u0440\u0430\u0446\u0438\u044f \u0441\u0434\u0435\u043b\u0430\u043d\u0430 \u043f\u0440\u043e\u0441\u0442\u043e -- \u0447\u0438\u0442\u0430\u0435\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0435\u0433\u043e \u0432 \u043d\u043e\u0432\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c.</p>\n<pre><code># migration.py\n\nclass Migration(DataMigration):\n\n    def forwards(self, orm):\n        src = orm['uploader.Queue']\n        dst = orm['uploader.Resource']\n        model = orm['storage.Project']\n        for item in src.objects.all():\n            project = model.objects.get(code=item.tags)\n            obj = dst(\n                kind=RESOURCE_IMAGE,\n                file_name=item.file_name,\n                file_type=item.file_type,\n                file_size=item.file_size,\n                position=item.position,\n                is_visible=item.visible,\n                is_staff=item.staff,\n                is_teaser=item.teaser,\n                uploaded_for=project,\n                uploaded_by=item.uploaded_by,\n                uploaded_at=item.registered\n            )\n            obj.resource.save(item.file_name, item.image, save=True)\n</code></pre>\n<p>\u0412\u0441\u0451 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e, \u043a\u0440\u043e\u043c\u0435 \u043e\u0434\u043d\u043e\u0433\u043e. \u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 <code>settings.MEDIA_ROOT</code>, \u043d\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432. \u041f\u043e\u0445\u043e\u0436\u0435, \u0447\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f <code>upload_by_conditions</code> \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438. \u041f\u0440\u0438\u0447\u0438\u043d\u0443 \u0442\u0430\u043a\u043e\u0433\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u043a\u0430 \u043e\u0441\u043e\u0437\u043d\u0430\u0442\u044c \u043d\u0435 \u043c\u043e\u0433\u0443.</p>\n<p>\u0415\u0441\u0442\u044c \u0438\u0434\u0435\u0438?</p>",
      "topic": 1,
      "user": 1
    }
  }
]