[
    {
        "pk": 5, 
        "model": "examples.category", 
        "fields": {
            "name": "Django ORM "
        }
    }, 
    {
        "pk": 2, 
        "model": "examples.category", 
        "fields": {
            "name": "\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u044b "
        }
    }, 
    {
        "pk": 4, 
        "model": "examples.category", 
        "fields": {
            "name": "\u0414\u0436\u0430\u0431\u0431\u0435\u0440 "
        }
    }, 
    {
        "pk": 7, 
        "model": "examples.category", 
        "fields": {
            "name": "\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 "
        }
    }, 
    {
        "pk": 3, 
        "model": "examples.category", 
        "fields": {
            "name": "\u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f "
        }
    }, 
    {
        "pk": 1, 
        "model": "examples.category", 
        "fields": {
            "name": "\u041e\u0441\u043d\u043e\u0432\u044b "
        }
    }, 
    {
        "pk": 6, 
        "model": "examples.category", 
        "fields": {
            "name": "\u0424\u043e\u0440\u043c\u044b "
        }
    }, 
    {
        "pk": 3, 
        "model": "examples.example", 
        "fields": {
            "category": 1, 
            "content": "\u041f\u0440\u0438\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 Apache \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430:\r\n\r\n    <VirtualHost *>\r\n        ServerName djbookru\r\n        ServerAdmin ruslan.popov@gmail.com\r\n    \r\n        WSGIScriptAlias / /home/rpopov/django.apps/djbookru/django.wsgi\r\n        WSGIDaemonProcess djbookru processes=1 maximum-requests=1 threads=1\r\n        WSGIProcessGroup djbookru\r\n    \r\n        ErrorLog /var/log/apache2/djbookru.error.log\r\n        CustomLog /var/log/apache2/djbookru.access.log combined\r\n        ServerSignature On\r\n    \r\n        Alias /css/        \"/home/rpopov/django.apps/djbookru/css/\"\r\n        Alias /js/         \"/home/rpopov/django.apps/djbookru/js/\"\r\n        Alias /pics/       \"/home/rpopov/django.apps/djbookru/pics/\"\r\n        Alias /adminmedia/ \"/home/rpopov/django.engine/django/contrib/admin/media/\"\r\n    </VirtualHost>\r\n\r\n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0441\u0442\u0440\u043e\u0447\u043a\u0443 \u0441 ''WSGIDaemonProcess''. \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0435\u0440\u0435\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b\u044b \u043f\u043e\u0441\u043b\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0442\u0430\u043a\u0436\u0435 \u043a\u0430\u043a \u0438 Django \u0441\u0435\u0440\u0432\u0435\u0440.\r\n\r\n\u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u043a\u043e\u0440\u043d\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u0451\u043c \u0444\u0430\u0439\u043b ''django.wsgi'':\r\n\r\n    # -*- coding: utf-8 -*-\r\n    \r\n    import os, sys\r\n    sys.stdout = sys.stderr\r\n    sys.path.insert(0, os.path.dirname(__file__))\r\n    sys.path.append('/home/rpopov/django.engine')\r\n    sys.path.append('/home/rpopov/django.apps')\r\n    os.environ['DJANGO_SETTINGS_MODULE'] = 'settings'\r\n    from django.core.handlers.wsgi import WSGIHandler\r\n    application = WSGIHandler()\r\n\r\n\u042d\u0442\u043e \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u043d\u0430 \u044f\u0437\u044b\u043a\u0435 Python, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 Django \u043e\u0431\u044a\u0435\u043a\u0442 WSGIHandler, \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u0434\u0451\u0442 \u0432\u0441\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0432\u0430\u0448\u0438\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c. \u041f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u0435 ''stderr'' \u043a ''stdout'' \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043b\u0430\u0434\u043a\u0438 \u043a\u043e\u0434\u0430 \u043e\u0431\u044b\u0447\u043d\u044b\u043c\u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430\u043c\u0438 ''print'' \u0432 \u043a\u043e\u0434\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.", 
            "created": "2010-10-01 20:49:59", 
            "title": "Apache + WSGI"
        }
    }, 
    {
        "pk": 5, 
        "model": "examples.example", 
        "fields": {
            "category": 7, 
            "content": "(c) 2009 alerion.um \u0441 \u0433\u043c\u044b\u043b\u0430\r\n\r\n\u0415\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432. \u041d\u0443\u0436\u0435\u043d \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435 \u0434\u043b\u044f \u0438\u0445 \u043c\u043e\u0434\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u041c\u043e\u0434\u0435\u0440\u0430\u0442\u043e\u0440 \u043c\u043e\u0436\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438, \u0432\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u043d\u0438\u044f \u043a\u0430\u0437\u0443\u0441\u043e\u0432 \"\u044f \u0442\u0430\u043a\u043e\u0433\u043e \u043d\u0435 \u043f\u0438\u0441\u0430\u043b\". \u041d\u0443\u0436\u043d\u043e \u0443\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0430 \u043d\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438 \u0443\u0431\u0440\u0430\u0442\u044c \u0432\u0441\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f.\r\n\r\n\u0424\u0430\u0439\u043b `models.py`\r\n\r\n    class Comment(BaseComment):\r\n        content_type   = models.ForeignKey(ContentType, related_name=\"content_type_set_for_%(class)s\")\r\n        object_id      = models.TextField('object ID')\r\n        content_object = generic.GenericForeignKey(ct_field=\"content_type\", fk_field=\"object_id\")\r\n        content_object.short_description = u'\u0421\u0442\u0430\u0442\u044c\u044f'\r\n    \r\n        user        = models.ForeignKey(User, related_name='%(class)s_comments')\r\n        comment     = models.TextField('\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439', max_length=COMMENT_MAX_LENGTH)\r\n        ip          = models.IPAddressField('IP', editable=False)\r\n        created_at  = models.DateTimeField('\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d', auto_now_add=True)\r\n    \r\n        class Meta:\r\n            verbose_name = '\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439'\r\n            verbose_name_plural = '\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438'\r\n    \r\n        def get_category(self):\r\n            '''\r\n            \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0447\u0438\u0442\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439\r\n            '''\r\n            parts = {\r\n                'news': u'\u041d\u043e\u0432\u043e\u0441\u0442\u0438',\r\n                'cinema': u'\u041a\u0438\u043d\u043e\u0430\u0444\u0438\u0448\u0430'\r\n            }\r\n            return parts[self.content_type.app_label]\r\n        get_category.short_description = u'\u0420\u0430\u0437\u0434\u0435\u043b'\r\n    \r\n\u0424\u0430\u0439\u043b `admin.py`\r\n\r\n    class CommentAdmin(admin.ModelAdmin):\r\n        list_display = ('user', 'comment', 'get_category', 'content_object', 'ip', 'created_at')\r\n        list_select_related = True\r\n        search_fields = ('comment', 'user__username')\r\n        ordering = ('-created_at',)\r\n    \r\n        def has_change_permission(self, request, obj=None):\r\n            '''\r\n            \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c False, django \u0434\u0430\u0436\u0435 \u043d\u0435 \u043f\u0443\u0441\u0442\u044c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \r\n            \u0441\u043f\u0438\u0441\u043a\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0430\u043c \u0438 \u043d\u0443\u0436\u043d\u0430. \u0415\u0441\u043b\u0438 obj \u043d\u0435 \u0440\u0430\u0432\u043d\u043e None, \u0437\u043d\u0430\u0447\u0438\u0442 \r\n            \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u0437\u0430\u0439\u0442\u0438 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u0438\u043d\u0430\u0447\u0435 - \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\r\n            \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043c\u0435\u043d\u0430\u0442\u0430\u0440\u0438\u0435\u0432.\r\n            '''\r\n            if obj:\r\n                return False\r\n            else:\r\n                return super(CommentAdmin, self).has_change_permission(request, obj=None)\r\n    \r\n        def has_add_permission(self, request):\r\n            #\u0417\u0430\u043f\u0440\u0435\u0449\u0430\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u0447\u0435\u0440\u0435\u0437 \u0430\u0434\u043c\u0438\u043d\u0441\u043a\u0438\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\r\n            return False\r\n    \r\n        def changelist_view(self, request, extra_context=None):\r\n            '''\r\n            \u042d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u0432\u043e\u0437\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432.\r\n            \u0412\u043e\u0442 \u0437\u0434\u0435\u0441\u044c \u043c\u044b \u0443\u0431\u0438\u0440\u0430\u0435\u043c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0441\u043f\u0438\u0441\u043a\u0430\r\n            \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432. \u0412 __init__ \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f, \u043f\u043e\u0442\u043e\u043c\u0443 \u0433\u0434\u0435-\u0442\u043e \u043f\u043e\u0441\u043b\u0435 \u043d\u0435\u0433\u043e \u0441\u0442\u0430\u0432\u0438\u0442\u0441\u044f\r\n            \u043f\u0435\u0440\u0432\u0430\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430 \u043f\u043e \u0434\u0435\u0444\u043e\u043b\u0442\u0443. (None,) \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a,\r\n            \u0432 \u0442\u0435\u0433\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0441\u0441\u044b\u043b\u043a\u0430 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u0441\u044f \u043d\u0430 checkbox.\r\n            '''\r\n            self.list_display_links = (None,)\r\n            return super(CommentAdmin, self).changelist_view(request, extra_context=None)\r\n\r\n", 
            "created": "2010-10-01 20:57:30", 
            "title": "\u0411\u0435\u0437 \u043f\u0440\u0430\u0432\u0430 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f"
        }
    }, 
    {
        "pk": 10, 
        "model": "examples.example", 
        "fields": {
            "category": 2, 
            "content": "\u0414\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u0434\u0430\u0447\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0444\u0430\u0439\u043b\u0430 \u0441 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MIME \u0442\u0438\u043f\u0430 \u0438 \u0438\u043c\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430:\r\n\r\n\tfrom django.http import HttpResponse, HttpResponseRedirect\r\n\r\n\tdef save_file(mimetype):\r\n\t    def saver(func):\r\n\t        def wrapper(request, *args, **kw):\r\n\t            result = func(request, *args, **kw)\r\n\t            if isinstance(result, tuple):\r\n\t                filename, data = result\r\n\t                resp = HttpResponse(data, mimetype=mimetype)\r\n\t                resp['Content-Disposition'] = 'attachment; filename=%s' % filename\r\n\t                return resp\r\n\t            return result\r\n\t        return wrapper\r\n\t    return saver\r\n\r\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f:\r\n\r\n    @save_file('application/xml') # \u0437\u0434\u0435\u0441\u044c \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c MIME \u0442\u0438\u043f \u0444\u0430\u0439\u043b\u0430\r\n    def xml_response(request):\r\n        \"\"\" \u041e\u0442\u0434\u0430\u0451\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 XML. \"\"\"\r\n        try:\r\n            # \u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c, \u0447\u0442\u043e \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f XML \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432\u043d\u0435\u0448\u043d\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439\r\n            xml = \"<resp><code>200</code><desc>Ok</desc></resp>\"\r\n        except Exception, e:\r\n            # \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438, \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u0441\u0430\u0439\u0442\u0430\r\n            request.session['error'] = e\r\n            return HttpResponseRedirect('/error/')\r\n        return ('result.xml', xml) # \u0437\u0434\u0435\u0441\u044c \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0435\u0433\u043e \u0438\u043c\u044f \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435\r\n\r\n\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044e, \u043a\u043e\u0433\u0434\u0430 \u0434\u0435\u043a\u043e\u0440\u0438\u0440\u0443\u0435\u043c\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0435 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \u0438 \u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435. \u041a\u0430\u043a \u0432\u0438\u0434\u043d\u043e \u0438\u0437 \u043f\u0440\u0438\u043c\u0435\u0440\u0430, \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439. \u0412\u0441\u0451 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e \u0442\u0430\u043a \u043a\u0430\u043a \u043d\u0430\u0434\u043e, \u0431\u0435\u0441\u043f\u043e\u043a\u043e\u0438\u0442\u044c\u0441\u044f \u043e\u0431 \u044d\u0442\u043e\u043c \u043d\u0435 \u0441\u0442\u043e\u0438\u0442.", 
            "created": "2010-10-01 20:58:01", 
            "title": "\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u0432\u044b\u0434\u0430\u0447\u0438 \u0444\u0430\u0439\u043b\u0430"
        }
    }, 
    {
        "pk": 8, 
        "model": "examples.example", 
        "fields": {
            "category": 4, 
            "content": "\u041f\u043e \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430\u043c \u0441\u0430\u0439\u0442\u0430 http://mariz.org/blog/2008/mar/07/django-error-notification-with-jabber/\r\n\r\nDjango \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u043e\u043c \u0434\u043b\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445 \u0432 \u043a\u043e\u0434\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u044e\u0449\u0438\u0445 \u043a\u043e\u0433\u0434\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435. \u041c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u0440\u0430\u0441\u0441\u044b\u043b\u0430\u0435\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u043c, \u043a\u0442\u043e \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 ``ADMIN`` \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 (\u0441\u043c. ``settings.py``), \u043f\u0440\u0438\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u044f \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439 500.\r\n\r\n\u0422\u0430\u043a\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u043e\u0442\u043b\u0430\u0434\u043a\u0438.\r\n\r\n\u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0443 500, \u043e\u043f\u0438\u0441\u0430\u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e ``handler500`` \u0432 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u043c ``urls.py``. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043b\u0435\u0433\u043a\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u043d\u0430 \u043d\u0430\u0448 jabber.\r\n\r\n\u041f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c [xmpppy](http://xmpppy.sourceforge.net/) \u0438 [dnspython](http://www.dnspython.org/):\r\n\r\n    $ easy_install xmpppy\r\n    $ easy_install dnspython\r\n\r\n\u0421\u043e\u0432\u0435\u0442: \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u0435\u0441\u0442\u044c \u0432 \u0432\u0430\u0448\u0435\u043c \u0434\u0438\u0441\u0442\u0440\u0438\u0431\u0443\u0442\u0438\u0432\u0435, \u043b\u0443\u0447\u0448\u0435 \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435\u0441\u044c \u0438\u043c\u0438.\r\n\r\n\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 ``settings.py`` \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 jabber:\r\n\r\n    JABBER_ERROR_NOTIFICATION = True\r\n    JABBER_ID = 'your_jabberid@jabberdomain.com'\r\n    JABBER_PASSWORD = 'your_jabber_password'\r\n    JABBER_RECIPIENT = 'recipient@jabberdomain.com'\r\n    JABBER_ERROR_TEXT = 'An error occurred in \"Project Name\", ' + \\\r\n                        'please check your email.'\r\n\r\n\u041a\u043e\u0434 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u0432 \u0432\u0438\u0434\u0435 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 ``errors`` \u0438 \u043d\u0435 \u0437\u0430\u0431\u0443\u0434\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 (\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 ``INSTALLED_APPS`` \u0432 ``settings.py``):\r\n\r\n    python manage.py startapp errors\r\n\r\n\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e ``handler500`` \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 ``urls.py``:\r\n\r\n    handler500 = 'errors.views.server_error_jabber'\r\n\r\n\u0418 \u043d\u0430\u043a\u043e\u043d\u0435\u0446 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432 ``errors.view``, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u043c \u0432 jabber \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439 500:\r\n\r\n    from django.views.defaults import server_error\r\n    from django.conf import settings\r\n    import xmpp, time\r\n\r\n    def server_error_jabber(request, template_name='500.html'):\r\n       if settings.JABBER_ERROR_NOTIFICATION:\r\n          jid = xmpp.protocol.JID(settings.JABBER_ID)\r\n          cl = xmpp.Client(jid.getDomain(), debug=[])\r\n          conn = cl.connect()\r\n          if conn:\r\n              auth = cl.auth(jid.getNode(), settings.JABBER_PASSWORD,\r\n                             resource=jid.getResource())\r\n              if auth:\r\n                  id = cl.send(xmpp.protocol.Message(settings.JABBER_RECIPIENT,\r\n                                                     settings.JABBER_ERROR_TEXT))\r\n                  # \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0442\u0430\u0440\u044b\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043d\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f,\r\n                  # \u0435\u0441\u043b\u0438 \u0432\u044b \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e \u043e\u0442\u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u0442\u0435\u0441\u044c \u043f\u043e\u0441\u043b\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438\r\n                  time.sleep(1)\r\n        return server_error(request, template_name)\r\n\r\n\u0421\u043e\u0432\u0435\u0442: \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0440\u0435\u0436\u0438\u043c \u043e\u0442\u043b\u0430\u0434\u043a\u0438, \u0438\u043d\u0430\u0447\u0435 \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u0432\u044b \u043d\u0435 \u0434\u043e\u0436\u0434\u0451\u0442\u0435\u0441\u044c :)\r\n", 
            "created": "2010-10-01 20:58:12", 
            "title": "\u041e\u0448\u0438\u0431\u043a\u0430 500: \u0423\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 jabber"
        }
    }, 
    {
        "pk": 7, 
        "model": "examples.example", 
        "fields": {
            "category": 5, 
            "content": "(c) 2009 alerion.um \u0441 \u0433\u043c\u044b\u043b\u0430\r\n\r\n`Select_related` \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0445 \u0441\u0432\u044f\u0437\u0435\u0439. \u0412 \u043c\u0430\u043d\u0443\u0430\u043b\u0435 Django, \u0432 \u043f\u0440\u0438\u043c\u0435\u0440\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0445 \u0441\u0432\u044f\u0437\u0430\u043d\u044b\u0445 \u0442\u0430\u0431\u043b\u0438\u0446, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0438 \u043a \u043d\u0438\u043c. \u041c\u043e\u0436\u043d\u043e, \u043a\u043e\u043d\u0435\u0447\u043d\u043e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c raw sql, \u043a\u043e\u0433\u0434\u0430 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u043c\u0435\u0442\u043e\u0434\u0430\u043c \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, `get_absolute_url` \u0438 \u0434\u0440. \u0424\u0443\u043d\u043a\u0446\u0438\u044f `load_related_m2m` \u0434\u043b\u044f \u043e\u0431\u044c\u0435\u043a\u0442\u043e\u0432 \u0432 `object_list` \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0441\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u044b\u0435(m2m) \u0447\u0435\u0440\u0435\u0437 \u043f\u043e\u043b\u0435 `field` \u043e\u0431\u044c\u0435\u043a\u0442\u044b \u0438 \u0437\u0430\u043d\u043e\u0441\u0438\u0442 \u0432 \u043f\u043e\u043b\u0435 `\"all_\" % field` \u043e\u0431\u044c\u0435\u043a\u0442\u0430. \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u0438\u043d \u043b\u0438\u0448\u043d\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043a\u0430\u0436\u0434\u0443\u044e \u0441\u0432\u044f\u0437\u0430\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443.\r\n    \r\n\u0424\u0430\u0439\u043b `models.py`\r\n\r\n    class Post(models.Model):\r\n        name = models.CharField(max_length=255)\r\n        tags = models.ManyToManyField('Tag', blank=True)\r\n        genres = models.ManyToManyField('Genre', blank=True)\r\n    \r\n    class Tag(models.Model):\r\n        name = models.CharField(max_length=255, unique=True)\r\n    \r\n    class Genre(models.Model):\r\n        name = models.CharField(max_length=255, unique=True)\r\n    \r\n\u0424\u0430\u0439\u043b `views.py`\r\n\r\n    def test(request):\r\n        from lib import load_related_m2m\r\n        from app.models import Post\r\n        p = Post.objects.all()[:10]\r\n        load_related_m2m(p, 'tags')\r\n        load_related_m2m(p, 'genres')\r\n        return {'posts': p}\r\n    \r\n\u0424\u0430\u0439\u043b `test.html`\r\n\r\n          {% for item in posts %}\r\n                <h3>{{ item.name }}</h3><br/>\r\n                \u0422\u0435\u0433\u0438:\r\n                {% for tag in item.all_tags %}\r\n                    {{ tag.name }}, \r\n                {% endfor %}<br/>\r\n                \u0416\u0430\u043d\u0440\u044b:\r\n                {% for g in item.all_genres %}\r\n                    {{ g.name }},\r\n                {% endfor %}<br/><br/>\r\n          {% endfor %}\r\n    \r\n\u0424\u0430\u0439\u043b `lib.py`\r\n\r\n    from django.db.models.sql.constants import LOOKUP_SEP\r\n    from django.db.models import sql\r\n    from django.db import connection\r\n    \r\n    def load_related_m2m(object_list, field):\r\n    \r\n        select_fields = ['pk']\r\n        related_field = object_list.model._meta.get_field(field)\r\n        related_model = related_field.rel.to\r\n        cache_name = 'all_%s' % field\r\n    \r\n        for f in related_model._meta.local_fields:\r\n            select_fields.append('%s%s%s' % (field, LOOKUP_SEP, f.column))\r\n    \r\n        query = sql.Query(object_list.model, connection)\r\n        query.add_fields(select_fields)\r\n        query.add_filter(('pk__in', [obj.pk for obj in object_list]))\r\n    \r\n        related_dict = {}\r\n        for row in query.results_iter():\r\n            if row[2]:\r\n                related_dict.setdefault(row[0], []).append(related_model(*row[1:]))\r\n    \r\n        for obj in object_list:\r\n            try:\r\n                setattr(obj, cache_name, related_dict[obj.pk])\r\n            except KeyError:\r\n                setattr(obj, cache_name, [])\r\n    \r\n        return object_list\r\n\r\n<hr/>\r\n\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e 20 \u0438\u044e\u043b\u044f 2010\r\n\r\n\u0414\u043b\u044f Django 1.2 \u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0434 \u0431\u044b\u043b \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u043d \u0410\u043d\u0430\u0442\u043e\u043b\u0438\u0435\u043c \u041b\u0430\u0440\u0438\u043d\u044b\u043c. [Django 1.2.1 \u0438 load_related_m2m](http://larin.in/archives/193/)", 
            "created": "2010-10-01 20:58:21", 
            "title": "\u041f\u043e\u0434\u0433\u0440\u0443\u0437\u043a\u0430 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 (\u043c\u043d\u043e\u0433\u0438\u0435-\u043a\u043e-\u043c\u043d\u043e\u0433\u0438\u043c)"
        }
    }, 
    {
        "pk": 9, 
        "model": "examples.example", 
        "fields": {
            "category": 3, 
            "content": "\u041f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0447\u0430\u0441\u0442\u043e \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u0430\u043a\u0443\u044e-\u043d\u0438\u0431\u0443\u0434\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0438\u0437 \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0430\u0434\u0440\u0435\u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0435\u0433\u043e \u043f\u0440\u043e\u0444\u0430\u0439\u043b\u0430, \u0433\u0440\u0443\u043f\u043f\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 \u0447\u0442\u043e-\u043d\u0438\u0431\u0443\u0434\u044c \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445. \u041d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0438\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0447\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u043d\u0435\u0447\u0442\u043e \u043f\u043e\u0434\u043e\u0431\u043d\u043e\u0435:\r\n\r\n    # \u042d\u0442\u043e \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434!\r\n    from django.contrib.auth.models import User, Group\r\n    from project.authuser.models import UserProfile\r\n    from project.po.models import RO\r\n\r\n    # \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0430\u0434\u0440\u0435\u0441\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u043f\u0440\u043e\u0444\u0430\u0439\u043b\u0430\r\n    def get_address(request):\r\n        profile = request.user.get_profile()\r\n        address = ''\r\n        if profile:\r\n            address = profile.address\r\n        return address\r\n\r\n    # \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0433\u0440\u0443\u043f\u043f\u0443\r\n    SOME_GROUP_ID = 42\r\n    def join_user_to_group(request):\r\n        group = Group.objects.get(id=SOME_GROUP_ID)\r\n        if group:\r\n            request.user.add(group)\r\n            return True\r\n        return False\r\n\r\n    # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0431\u0430\u0437\u044b\r\n    def get_records(request):\r\n        org = RO.objects.get(id = request.user.get_profile().org.id)\r\n        if org:\r\n            return org\r\n        return None\r\n\r\n\u0412\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0432\u0441\u0451 \u044d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0443\u0436\u0430\u0441\u043d\u043e, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0437\u0430\u043a\u0440\u044b\u0442\u044c \u0433\u043b\u0430\u0437\u0430 \u043d\u0430 \u044f\u0432\u043d\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438.\r\n\r\n\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0442\u044c \u044d\u0442\u043e \u0432\u0441\u0451 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439:\r\n\r\n    from django.contrib.auth.models import User, Group\r\n    from project.authuser.models import UserProfile\r\n    from project.po.models import RO\r\n\r\n    # \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0430\u0434\u0440\u0435\u0441\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u043f\u0440\u043e\u0444\u0430\u0439\u043b\u0430\r\n    def get_address(request):\r\n        try:\r\n            return request.user.get_profile().address\r\n        except UserProfile.DoesNotExist:\r\n            return '\u041f\u0440\u043e\u0444\u0430\u0439\u043b \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442'\r\n\r\n    # \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0433\u0440\u0443\u043f\u043f\u0443\r\n    SOME_GROUP_ID = 42\r\n    def join_user_to_group(request):\r\n        try:\r\n            group = Group.objects.get(id=SOME_GROUP_ID)\r\n            request.user.add(group)\r\n            return True\r\n        except Group.DoesNotExist:\r\n            return False\r\n\r\n    # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0431\u0430\u0437\u044b\r\n    def get_records(request):\r\n        try:\r\n            return RO.objects.get(id = request.user.get_profile().org.id)\r\n        except UserProfile.DoesNotExist:\r\n            print '\u041f\u0440\u043e\u0444\u0430\u0439\u043b \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442'\r\n            return None\r\n        except RO.DoesNotExist:\r\n            print '\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445'\r\n            return None\r\n\r\n\u041f\u043e-\u043c\u043e\u0435\u043c\u0443, \u0442\u0430\u043a \u0431\u0443\u0434\u0435\u0442 \u043b\u0443\u0447\u0448\u0435.", 
            "created": "2010-10-01 20:58:32", 
            "title": "\u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u043d\u0430 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435"
        }
    }, 
    {
        "pk": 2, 
        "model": "examples.example", 
        "fields": {
            "category": 6, 
            "content": "\r\n    Index: web/forms.py\r\n    ===================================================================\r\n    --- web/forms.py\r\n    +++ web/forms.py\r\n    @@ -1,10 +1,12 @@\r\n     # -*- coding: utf-8 -*-\r\n     \r\n     from django.conf import settings\r\n     from django import forms\r\n     from django.utils.translation import ugettext_lazy as _\r\n    +from django.contrib.admin.widgets import AdminDateWidget\r\n    +\r\n     from parovoz.widgets import CharAndLinkWidget, DateCalField, DayPartField\r\n     \r\n     class DivErrorList(forms.util.ErrorList):\r\n         \"\"\"\r\n         \u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a \u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u043c \u0432\u0432\u043e\u0434\u0435.\r\n    @@ -107,19 +109,10 @@\r\n     \r\n     class Trip(forms.Form):\r\n         \"\"\"\r\n         \u0424\u043e\u0440\u043c\u0430 \"\u041f\u043e\u0435\u0437\u0434\u043a\u0430\"\r\n         \"\"\"\r\n         src_station = forms.CharField(\r\n             label=_(u'Departure station'),\r\n             max_length=128,\r\n             widget=CharAndLinkWidget(attrs={\r\n                 'desc': _(u'searching'),\r\n    @@ -132,29 +125,10 @@\r\n             widget=CharAndLinkWidget(attrs={\r\n                 'desc': _(u'searching'),\r\n                 'url': \"javascript:alert('arrival station list');\"\r\n                 })\r\n             )\r\n    -    departure_date = DateCalField(\r\n    +    departure_date = forms.DateField(\r\n             label=_('Date of departure'),\r\n             input_formats=('%d.%m.%Y', '%d/%m/%Y', '%d-%m-%Y'),\r\n    -        js=\"javascript:alert('show calendar');\",\r\n    -        desc=_(u'Click this button to show calendar.'),\r\n    -        icon=\"http://www.blogger.com/img/b16-rounded.gif\")\r\n    +        widget=AdminDateWidget)\r\n     \r\n    \r\n    Index: web/templates/base.html\r\n    ===================================================================\r\n    --- web/templates/base.html\r\n    +++ web/templates/base.html\r\n    @@ -5,14 +5,27 @@\r\n       <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n       <meta http-equiv=\"Content-Language\" content=\"ru\"/>\r\n       <meta name=\"ROBOTS\" content=\"ALL\"/>\r\n       <meta name=\"generator\" content=\"Django\"/>\r\n       <title>{{ page_title }}</title>\r\n    +\r\n       <link rel=\"stylesheet\" href=\"/css/style.css\" type=\"text/css\"/>\r\n    +  <link rel=\"stylesheet\" type=\"text/css\" href=\"/admin/media/css/base.css\" />\r\n    +  <link rel=\"stylesheet\" type=\"text/css\" href=\"/admin/media/css/forms.css\" />\r\n    +  <!--[if lte IE 7]><link rel=\"stylesheet\" type=\"text/css\" href=\"/admin/media/css/ie.css\" /><![endif]-->\r\n    +\r\n       <link rel=\"shortcut icon\" href=\"/pics/favicon.png\"/>\r\n    -  <!-- <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\"></script> -->\r\n    -  <script type=\"text/javascript\" src=\"/js/jquery.min.js\"></script>\r\n    +\r\n    +  <script type=\"text/javascript\">window.__admin_media_prefix__ = \"/admin/media/\";</script>\r\n    +\r\n    +  <script type=\"text/javascript\" src=\"/admin/jsi18n/\"></script>\r\n    +  <script type=\"text/javascript\" src=\"/admin/media/js/core.js\"></script>\r\n    +\r\n    +  <script type=\"text/javascript\" src=\"/admin/media/js/admin/RelatedObjectLookups.js\"></script>\r\n    +  <script type=\"text/javascript\" src=\"/admin/media/js/jquery.min.js\"></script>\r\n    +  <script type=\"text/javascript\" src=\"/admin/media/js/jquery.init.js\"></script>\r\n    +  <script type=\"text/javascript\" src=\"/admin/media/js/actions.min.js\"></script>\r\n     </head>\r\n     \r\n     <body>\r\n       {% include \"header.html\" %}\r\n       {% block structure %}{% endblock %}\r\n    \r\n    Index: web/urls.py\r\n    ===================================================================\r\n    --- web/urls.py\r\n    +++ web/urls.py\r\n    @@ -17,10 +17,11 @@\r\n         # to INSTALLED_APPS to enable admin documentation:\r\n         (r'^admin/doc/', include('django.contrib.admindocs.urls')),\r\n     \r\n         # Uncomment the next line to enable the admin:\r\n         (r'^admin/', include(admin.site.urls)),\r\n    +    url(r'^admin/jsi18n', 'django.views.i18n.javascript_catalog', name='jsi18n'), # hack to use admin form widgets\r\n     \r\n         # \u0438\u043d\u0434\u0435\u043a\u0441\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\r\n         (r'^$', 'views.flatpage'),\r\n     \r\n         (r'^register/$', 'views.register'),\r\n    \r\n", 
            "created": "2010-10-01 20:59:08", 
            "title": "\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u0438\u0434\u0436\u0435\u0442\u0430 \u0438\u0437 \u0430\u0434\u043c\u0438\u043d\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u043b\u044f \u0441 \u0434\u0430\u0442\u043e\u0439(\u0432 \u0432\u0438\u0434\u0435 diff'\u0430) "
        }
    }, 
    {
        "pk": 1, 
        "model": "examples.example", 
        "fields": {
            "category": 1, 
            "content": "\u0412 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 Django \u043e\u0442\u043b\u0438\u0447\u043d\u043e \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u043e \u043a\u0430\u043a \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043e\u043c cookie, \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u043b\u0438 \u043e\u043d\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442. \u041d\u043e \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u043f\u043e\u043d\u044f\u0442\u043d\u043e \u043a\u0430\u043a \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u044d\u0442\u0443 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435.\r\n\r\n\u0412\u043e\u0442 \u043f\u0440\u0438\u043c\u0435\u0440:\r\n\r\n    # urls.py\r\n    url(r'^$', 'views.index'),\r\n    url(r'^cookie/$', 'views.cookie'),\r\n\r\n    # views.py\r\n    @render_to('index.html', common_context)\r\n    def index(request, title=None):\r\n        if request.path == '/' and 'cookie_tested' not in request.session:\r\n            # \u041f\u0435\u0440\u0432\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 cookie \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043e\u043c\r\n            request.session.set_test_cookie()\r\n            return HttpResponseRedirect('/cookie/')\r\n\r\n    def cookie(request):\r\n        # \u0412\u0442\u043e\u0440\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 cookie \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043e\u043c, \u0443\u0431\u0438\u0440\u0430\u0435\u043c\r\n        # \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e cookie \u0438 \u043f\u0440\u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0432 \u0441\u0435\u0441\u0441\u0438\u044e, \u0447\u0442\u043e\u0431\u044b \u0431\u043e\u043b\u044c\u0448\u0435\r\n        # \u0442\u0430\u043a\u0438\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0435 \u0434\u0435\u043b\u0430\u0442\u044c\r\n        if request.session.test_cookie_worked():\r\n            request.session.delete_test_cookie()\r\n            request.session['cookie_tested'] = True\r\n            return HttpResponseRedirect('/')\r\n        else:\r\n            return HttpResponseRedirect('/cookie_does_not_support/')\r\n\r\n\u041f\u043e-\u043c\u043e\u0435\u043c\u0443, \u043d\u0435\u043f\u043b\u043e\u0445\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 ;)", 
            "created": "2010-10-01 20:59:42", 
            "title": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 Cookie \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 "
        }
    }, 
    {
        "pk": 6, 
        "model": "examples.example", 
        "fields": {
            "category": 5, 
            "content": "\u041f\u043e \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430\u043c http://scottbarnham.com/blog/2008/08/21/extending-the-django-user-model-with-inheritance/\r\n\r\n## \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f ##\r\n\r\n\u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e Django \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u043d\u0443\u0436\u0434\u0430\u044e\u0442\u0441\u044f \u0432 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u0430\u0436\u0434\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435.\r\n\r\n## \u0421\u0442\u0430\u0440\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431: \u041f\u0440\u043e\u0444\u0430\u0439\u043b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f ##\r\n\r\n\u0420\u0430\u043d\u044c\u0448\u0435 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u043b\u0430\u0441\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u043f\u0440\u043e\u0444\u0430\u0439\u043b\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u043b\u0430\u0441\u044c \u043a\u0430\u043a \u043e\u0434\u0438\u043d-\u043a-\u043e\u0434\u043d\u043e\u043c\u0443 \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\r\n\r\n\u041c\u043e\u0434\u0435\u043b\u044c:\r\n\r\n    class UserProfile(models.Model):\r\n        user = models.ForeignKey(User, unique=True, related_name='profile')\r\n        timezone = models.CharField(max_length=50, default='Europe/London')\r\n\r\n\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f:\r\n\r\n    AUTH_PROFILE_MODULE = 'accounts.UserProfile'\r\n\r\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\r\n\r\n    profile = request.user.get_profile()\r\n    print profile.timezone\r\n\r\n\u0414\u0430\u043d\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u043e\u0442\u043b\u0438\u0447\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u043b, \u043d\u043e \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043b \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u043b\u044e\u0431\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u0440\u043e\u0444\u0430\u0439\u043b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u043e\u043d, \u043a\u043e\u043d\u0435\u0447\u043d\u043e, \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043b\u0441\u044f \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043a\u0430\u0436\u0434\u043e\u0435 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043a `get_profile()` \u043d\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u043b\u043e \u043a \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044e \u0437\u0430\u043f\u0440\u043e\u0441\u0430). \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043a \u044d\u0442\u043e\u043c\u0443, \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u0440\u0430\u0441\u043f\u043e\u043b\u0430\u0433\u0430\u043b\u0430\u0441\u044c \u0432 \u0434\u0432\u0443\u0445 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u044f\u0445, \u0447\u0442\u043e \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043b\u043e \u0435\u0451 \u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u043d\u0438\u0445.\r\n\r\n## \u041d\u043e\u0432\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431: \u041d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 ##\r\n\r\n\u0427\u0430\u0441\u0442\u044c\u044e \u043e\u0433\u0440\u043e\u043c\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b, \u043f\u0440\u043e\u0434\u0435\u043b\u0430\u043d\u043d\u043e\u0439 \u0432 [queryset-refactor](http://code.djangoproject.com/wiki/QuerysetRefactorBranch) \u0442\u043e\u0432\u0430\u0440\u0438\u0449\u0435\u043c [Malcolm](http://www.pointy-stick.com/about/) \u0438 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c\u0438, \u044f\u0432\u0438\u043b\u043e\u0441\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 Django \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439.\r\n\r\n\u041d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0440\u0435\u0432\u0438\u0437\u0438\u0438 7477 (26 \u0430\u043f\u0440\u0435\u043b\u044f 2008) \u0432\u0430\u0448\u0438 \u043a\u043b\u0430\u0441\u0441\u044b \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043c\u043e\u0433\u0443\u0442 \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043b\u044e\u0431\u043e\u0439 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438. \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438. \u041a\u043e\u0433\u0434\u0430 \u0432\u044b \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0441\u0432\u043e\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438, \u0437\u0430\u043f\u0440\u043e\u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 `JOIN` \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0435\u0439 \u0438\u0437 \u043d\u0435\u0451 \u0438 \u0438\u0437 \u0431\u0430\u0437\u043e\u0432\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438.\r\n\r\n### \u041d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0442 User ###\r\n\r\n\u0412\u043c\u0435\u0441\u0442\u043e \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u043f\u0440\u043e\u0444\u0430\u0439\u043b\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043f\u043e\u0447\u0435\u043c\u0443 \u0431\u044b \u043d\u0435 \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441 \u043e\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e `User` \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u0435\u0439?\r\n\r\n    from django.contrib.auth.models import User, UserManager\r\n    \r\n    class CustomUser(User):\r\n        \"\"\"User with app settings.\"\"\"\r\n        timezone = models.CharField(max_length=50, default='Europe/London')\r\n    \r\n        # Use UserManager to get the create_user method, etc.\r\n        objects = UserManager()\r\n\r\n\u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e, \u043a\u0430\u0436\u0434\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 `CustomerUser` \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u043b\u0430\u0434\u0430\u0442\u044c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u043c\u0438 \u0434\u043b\u044f `User` \u043f\u043e\u043b\u044f\u043c\u0438 \u0438 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438, \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0441 \u043d\u0430\u043b\u0438\u0447\u0438\u0435\u043c \u043d\u0430\u0448\u0438\u0445 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u043b\u0435\u0439 \u0438 \u043c\u0435\u0442\u043e\u0434\u043e\u0432. \u041d\u0435\u043f\u043b\u043e\u0445\u043e, \u0434\u0430?\r\n\r\n\u041c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043c `UserManager` \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430, \u043f\u043e\u043b\u0443\u0447\u0430\u044f \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u043c \u043c\u0435\u0442\u043e\u0434\u0430\u043c. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0442\u0430\u043a:\r\n\r\n    user = CustomUser.objects.create(...)\r\n\r\n\u0415\u0441\u043b\u0438 \u043c\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0447\u0435\u0440\u0435\u0437 \u043a\u043b\u0430\u0441\u0441 `User`, \u0442\u043e \u043c\u044b \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 `CustomUser`. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441.\r\n\r\n\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043a\u043b\u0430\u0441\u0441\u043e\u043c `User`, \u043f\u0440\u043e\u0441\u0442\u043e \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0443 \u0432\u0430\u0441 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u043d\u043e\u0432\u044b\u043c \u043f\u043e\u043b\u044f\u043c \u0438 \u043c\u0435\u0442\u043e\u0434\u0430\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 `CustomUser`.\r\n\r\n## \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 `CustomUser` \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e ##\r\n\r\n\u041d\u043e \u0435\u0441\u0442\u044c \u043e\u0434\u043d\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430. \u041f\u0440\u0438 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0438 \u043a `request.user` \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0443 \u043a\u043b\u0430\u0441\u0441\u0430 `User`, \u0430 \u043d\u0435 `CustomUser`, \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u043b\u044f\u043c.\r\n\r\n\u0412\u0441\u0451, \u0447\u0442\u043e \u043d\u0430\u043c \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f &mdash; Django \u0434\u043e\u043b\u0436\u043d\u0430 \u043d\u0435\u0437\u0430\u043c\u0435\u0442\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 `CustomUser`. \u0418 \u044d\u0442\u043e\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0438\u0442\u044c\u0441\u044f \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u043b\u0435\u0433\u043a\u043e.\r\n\r\n### \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u044e\u0442\u0441\u044f \u043e\u0442 \u043c\u043e\u0434\u0443\u043b\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 ###\r\n\r\n\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c (backend) \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c `User` \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044f \u043f\u0430\u0440\u043e\u043b\u044c \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c, \u043a\u043e\u0433\u0434\u0430 \u0432\u043e\u0437\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 `User`. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 [\u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u0432\u043e\u0439 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438](http://www.djangoproject.com/documentation/authentication/#writing-an-authentication-backend), \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0430\u0440\u043e\u043b\u044f \u0438 \u043b\u043e\u0433\u0438\u043d\u0430 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445, \u0438\u043b\u0438 \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0430\u0434\u0440\u0435\u0441\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b \u0432\u043c\u0435\u0441\u0442\u043e \u043b\u043e\u0433\u0438\u043d\u0430.\r\n\r\n\u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 `CustomUser` \u0432\u043c\u0435\u0441\u0442\u043e `User`.\r\n\r\n\u0424\u0430\u0439\u043b `auth_backends.py`:\r\n\r\n    from django.conf import settings\r\n    from django.contrib.auth.backends import ModelBackend\r\n    from django.core.exceptions import ImproperlyConfigured\r\n    from django.db.models import get_model\r\n    \r\n    class CustomUserModelBackend(ModelBackend):\r\n        def authenticate(self, username=None, password=None):\r\n            try:\r\n                user = self.user_class.objects.get(username=username)\r\n                if user.check_password(password):\r\n                    return user\r\n            except self.user_class.DoesNotExist:\r\n                return None\r\n    \r\n        def get_user(self, user_id):\r\n            try:\r\n                return self.user_class.objects.get(pk=user_id)\r\n            except self.user_class.DoesNotExist:\r\n                return None\r\n    \r\n        @property\r\n        def user_class(self):\r\n            if not hasattr(self, '_user_class'):\r\n                self._user_class = get_model(*settings.CUSTOM_USER_MODEL.split('.', 2))\r\n                if not self._user_class:\r\n                    raise ImproperlyConfigured('Could not get custom user model')\r\n            return self._user_class\r\n\r\n\u0424\u0430\u0439\u043b `settings.py`:\r\n\r\n    AUTHENTICATION_BACKENDS = (\r\n        'myproject.auth_backends.CustomUserModelBackend',\r\n        'django.contrib.auth.backends.ModelBackend',\r\n    )\r\n    ...\r\n    \r\n    CUSTOM_USER_MODEL = 'accounts.CustomUser'\r\n\r\n\u0412\u043e\u0442 \u0438 \u0432\u0441\u0451. \u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043e\u0433\u0434\u0430 \u0432\u044b \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a `request.user`, \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 `CustomUser` \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0432\u0430\u0448\u0438\u043c\u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u043f\u043e\u043b\u044f\u043c\u0438 \u0438 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438.\r\n\r\n### \u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 ###\r\n\r\n\u0410 \u0432\u043e\u0442 \u0442\u0430\u043a \u043f\u043e\u0434\u043c\u0435\u043d\u044f\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435:\r\n\r\n    from django.contrib.auth.admin import UserAdmin\r\n    from django.contrib.auth.models import User\r\n    \r\n    from my_project.authuser.models import CustomUser\r\n    \r\n    class CustomUserAdmin(UserAdmin):\r\n        list_display = ('username', 'last_name', 'first_name',\r\n                        'is_staff', 'is_active')\r\n    \r\n    admin.site.unregister(User)\r\n    admin.site.register(CustomUser, CustomUserAdmin)\r\n", 
            "created": "2010-10-01 20:59:53", 
            "title": "\u041f\u0440\u043e\u0444\u0430\u0439\u043b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f: \u041d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439"
        }
    }, 
    {
        "pk": 4, 
        "model": "examples.example", 
        "fields": {
            "category": 7, 
            "content": "\u0415\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u0442\u0430\u0442\u0435\u0439. \u041d\u0443\u0436\u043d\u043e \u0434\u0432\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\r\n\u0430\u0434\u043c\u0438\u043d\u043a\u0435 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \u0438 \u0430\u0432\u0442\u043e\u0440\u043e\u0432 \u0441\u0442\u0430\u0442\u0435\u0439. \u0410\u0432\u0442\u043e\u0440\u044b \u043c\u043e\u0433\u0443\u0442 \u0432\u0438\u0434\u0435\u0442\u044c \u0438\r\n\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0432\u043e\u0438 \u0441\u0442\u0430\u0442\u044c\u0438. \u041c\u043e\u0434\u0435\u0440\u0430\u0442\u043e\u0440 \u0432\u0438\u0434\u0438\u0442 \u0432\u0441\u0435 \u0441\u0442\u0430\u0442\u044c\u0438 \u0438\r\n\u043c\u043e\u0436\u0435\u0442 \u0440\u0430\u0434\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0444\u043b\u0430\u0433 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0430\u0442\u044c\u0438 \u043d\u0430 \u0441\u0430\u0439\u0442\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0439, \u043f\u0440\u0438\r\n\u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0441\u0442\u0430\u0442\u0435\u0439 \u0430\u0432\u0442\u043e\u0440\u0430\u043c\u0438, \u0440\u0430\u0432\u0435\u043d False \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u0422\u0430\u043a\u0436\u0435\r\n\u0443\u0431\u0438\u0440\u0430\u0435\u043c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0443\u044e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f, \u0447\u0442\u043e \u0431\u044b \u043d\u0438\u043a\u0442\u043e \u043d\u0435 \u043c\u043e\u0433\r\n\u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0441\u0442\u0430\u0442\u044c\u0438 \u043a\u0440\u043e\u043c\u0435 \u043c\u043e\u0434\u0435\u0440\u0430\u0442\u043e\u0440\u0430.\r\n\r\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0435\u0441\u0442\u044c \u043d\u0430\r\nhttp://getopts.blogspot.com/2008/12/django.html, \u0442\u0430\u043c \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u043d\u043e\r\n\u0447\u0435\u0440\u0435\u0437 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 `has_change_permission` \u0438 \u0434\u0440\u0443\u0433\u0438\u0445, \u043d\u043e\r\n\u0432\u0441\u0451 \u044d\u0442\u043e \u043a\u0430\u043a-\u0442\u043e \u043d\u0435 \u043d\u0430\u0433\u043b\u044f\u0434\u043d\u043e.\r\n\r\n\u0422\u0435\u043c \u0431\u043e\u043b\u0435\u0435, \u0432\u0434\u0440\u0443\u0433 \u043a\u043e\u043c\u0443-\u0442\u043e \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u043c\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 ))\r\n\r\n\u041d\u0435\u0434\u0430\u0432\u043d\u043e \u0432 Django \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u044b\u0435\r\nproxy-\u043c\u043e\u0434\u0435\u043b\u0438. Proxy-\u043c\u043e\u0434\u0435\u043b\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0442\u0443 \u0436\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0432 \u0431\u0430\u0437\u0435\r\n\u0434\u0430\u043d\u043d\u044b\u0445, \u0447\u0442\u043e \u0438 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0430\u044f, \u0430 Django \u0434\u043b\u044f \u043d\u0435\u0451 \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439\r\n`content_type`, \u0442\u043e \u0435\u0441\u0442\u044c \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u0430\u0432 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435\r\n\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0433\u0440\u0443\u043f\u043f\u0443 \u0430\u0432\u0442\u043e\u0440\u043e\u0432 \u0441 \u043f\u0440\u0430\u0432\u0430\u043c\u0438 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\r\nProxy-\u043c\u043e\u0434\u0435\u043b\u0438, \u0438 \u0433\u0440\u0443g\u043f\u0443 \u043c\u043e\u0434\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\r\n\u043e\u0441\u043d\u043e\u0432\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443.\r\n\r\n\u0424\u0430\u0439\u043b `models.py`\r\n\r\n    class DjemPost(models.Model):\r\n        name = models.CharField('\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435', max_length=255)\r\n        slug = models.SlugField(unique=True)\r\n        annotation = models.TextField('\u0410\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f')\r\n        body = models.TextField('\u0421\u043e\u0434\u0435\u0440\u0436\u043d\u0438\u0435')\r\n        active = models.BooleanField('\u0410\u043a\u0442\u0438\u0432\u043d\u0430\u044f?', default=False, \\\r\n            help_text='\u041d\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u0441\u0442\u0430\u0442\u044c\u044f \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u0441\u044f. \u041d\u0435 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \\\r\n                       \u0430\u0432\u0442\u043e\u0440\u043e\u043c \u0441\u0442\u0430\u0442\u044c\u0438 (\u0434\u043b\u044f \u043c\u043e\u0434\u0435\u0440\u0430\u0446\u0438\u0438).')\r\n        hide = models.BooleanField('\u0421\u043a\u0440\u044b\u0442\u0430\u044f?', default=False, \\\r\n            help_text='''\u0421\u043a\u0440\u044b\u0442\u0430\u044f \u0441\u0442\u0430\u0442\u044c\u044f \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c\u0441\u044f. \r\n                         \u041c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u0430\u0432\u0442\u043e\u0440\u043e\u043c \u0441\u0442\u0430\u0442\u044c\u0438.<br/>\u041c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f,\r\n                         \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u043a\u0440\u044b\u0442\u0438\u044f \u043d\u0435\u0434\u043e\u043f\u0438\u0441\u0430\u043d\u043e\u0439 \u0441\u0442\u0430\u0442\u044c\u0438.''')\r\n        added = models.ForeignKey(User, editable=False)\r\n        created_at = models.DateTimeField('\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e', auto_now_add=True)\r\n    \r\n        class Meta:\r\n            verbose_name = '\u0421\u0442\u0430\u0442\u044c\u044e'\r\n            verbose_name_plural = '\u0421\u0442\u0430\u0442\u044c\u0438'\r\n            ordering = ['-created_at']\r\n    \r\n    class ProxyPostManager(models.Manager):\r\n        '''\r\n        \u041c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u0434\u043b\u044f Proxy-\u043c\u043e\u0434\u0435\u043b\u0438. \u041d\u0435 \u0437\u043d\u0430\u044e \u043f\u043e\u0447\u0435\u043c\u0443, \u043d\u043e \u0431\u0435\u0437 \u043d\u0435\u0433\u043e \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \r\n        \u043d\u0438 \u043e\u0434\u043d\u0430 \u0441\u0442\u0430\u0442\u044c\u044f, \u043d\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0432\u0435\u0440\u043d\u043e.\r\n        '''\r\n        def get_query_set(self):\r\n            return Post.objects.get_query_set()\r\n    \r\n    class ProxyPost(Post):\r\n        '''\r\n        Proxy-\u043c\u043e\u0434\u0435\u043b\u044c. \u041c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0435\u0449\u0451 \u0432\u0441\u044f\u043a\u0438\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0433\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\r\n        \u043a\u0430\u043a\u0438\u0445-\u043b\u0438\u0431\u043e \u043f\u043e\u043b\u0435\u0439 \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435.\r\n        '''\r\n        objects = ProxyPostManager()\r\n    \r\n        class Meta:\r\n            proxy = True\r\n            verbose_name = '\u0412\u0430\u0448\u0443 \u0441\u0442\u0430\u0442\u044c\u044e'\r\n            verbose_name_plural = '\u0412\u0430\u0448\u0438 \u0441\u0442\u0430\u0442\u044c\u0438'\r\n    \r\n\u0424\u0430\u0439\u043b `admin.py`\r\n\r\n    class BasePostAdmin(admin.ModelAdmin):\r\n        '''\r\n        \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 ModelAdmin \u0434\u043b\u044f \u0441\u0442\u0430\u0442\u044c\u0438, \u043e\u0442 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0431\u0443\u0434\u0435\u043c \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c\r\n        \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0435, \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430.\r\n        '''\r\n        prepopulated_fields = {\"slug\": (\"name\", )}\r\n        list_select_related = True\r\n        actions = ['make_hiden']\r\n        save_on_top = True\r\n    \r\n        class Media:\r\n            js = (\r\n                'js/tiny_mce/tiny_mce.js',\r\n            )\r\n    \r\n        def save_model(self, request, obj, form, change):\r\n            if not change:\r\n                obj.added = request.user\r\n            obj.save()\r\n    \r\n        def make_hiden(self, request, queryset):\r\n            queryset.update(hide=True)\r\n        make_hiden.short_description = \"\u0421\u043a\u0440\u044b\u0442\u044c\"\r\n    \r\n        def has_delete_permission(self, request, obj=None):\r\n            #\u0423\u0434\u0430\u043b\u044f\u0442\u044c \u043c\u043e\u0436\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0443\u043f\u0435\u0440\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\r\n            return request.user.is_superuser\r\n    \r\n        def get_actions(self, request=None):\r\n            '''\r\n            \u0423\u0431\u0438\u0440\u0430\u0435\u043c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0432\u0441\u0435\u0445, \u043a\u0440\u043e\u043c\u0435 \u0441\u0443\u043f\u0435\u0440\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. Action\r\n            \u0432 Django \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438, \u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 - \u043d\u0435\u0442.\r\n            '''\r\n            actions = super(BaseDjemPostAdmin, self).get_actions(request)\r\n            if not request.user.is_superuser:\r\n                del(actions['delete_selected'])\r\n            return actions\r\n    \r\n    class ProxyPostAdmin(BaseDjemPostAdmin):\r\n        '''\r\n        AdminModel \u0434\u043b\u044f \u0433\u0440\u0443\u043f\u043f\u044b \u0430\u0432\u0442\u043e\u0440\u043e\u0432. \u0423\u0431\u0440\u0430\u043b\u0438 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044f \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438.\r\n        '''\r\n        exclude = ('active', )\r\n        list_display = ('name', 'annotation', 'hide', 'created_at')\r\n        list_filter = ('hide')\r\n        search_fields = ['name']\r\n    \r\n        def has_change_permission(self, request, obj=None):\r\n            #\u0443\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u0440\u0430\u0432\u043e \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0438\u0435 \"\u0447\u0443\u0436\u0438\u0445\" \u0441\u0442\u0430\u0442\u0435\u0439\r\n            has_class_permission = super(ProxyDjemPostAdmin, self).has_change_permission(request, obj)\r\n            if not has_class_permission:\r\n                return False\r\n            if obj is not None and request.user.id != obj.added.id:\r\n                return False\r\n            return True\r\n    \r\n        def queryset(self, request):\r\n            #\u0412\u044b\u0432\u043e\u0434\u0438\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0430\u0442\u044c\u0438 \u0430\u0432\u0442\u043e\u0440\u0430\r\n            qs = super(ProxyDjemPostAdmin, self).queryset(request).filter(added=request.user)\r\n            return qs\r\n    \r\n    class PostAdmin(BaseDjemPostAdmin):\r\n        #AdminModel \u0434\u043b\u044f \u0433\u0440\u0443\u043f\u043f\u044b \u043c\u043e\u0434\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432\r\n        list_display = ('name', 'added', 'active', 'hide', 'created_at')\r\n        list_filter = ('active', 'hide')\r\n        search_fields = ['name', 'added__username']\r\n    \r\n    #\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438\r\n    admin.site.register(Post, PostAdmin)\r\n    admin.site.register(ProxyPost, ProxyPostAdmin)\r\n    ", 
            "created": "2010-10-01 21:00:04", 
            "title": "\u0420\u0430\u0437\u0434\u0435\u043b\u044f\u0439 \u0438 \u0432\u043b\u0430\u0441\u0442\u0432\u0443\u0439!"
        }
    }
]
