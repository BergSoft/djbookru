<?xml version="1.0" encoding="utf-8" standalone="no"?>

<project name="simpletrainru" default="help">

  <property environment="sysenv"/>

  <property file="project.user.properties"/>
  <property file="project.properties"/>

  <import file="${basedir}/antfarm/macros.xml"/>
  <import file="${basedir}/property_processor.xml"/>

  <record name="${project_name}.antlog.txt" action="start"/>

  <target name="help">
    <echo message="List available commands:"/>
    <echo message="  init      - initializes environment, downloads dependencies;"/>
    <echo message="  configure - prepares configuration files;"/>
    <echo message="  build     - build installation package;"/>
    <echo message="  clean     - removes trash and autogenerated files;"/>
    <echo message="  dropenv   - removes virtual environment."/>
  </target>

  <target name="init">
    <condition property="no_virtual_environment">
      <not>
        <available file="${basedir}/env/bin/activate" type="file"/>
      </not>
    </condition>

    <if> <!-- ant-contrib -->
      <isset property="no_virtual_environment"/>
      <then>
        <sequential>
          <echo message="Initialize virtual environment for this project."/>
          <exec executable="virtualenv" failonerror="true">
            <arg line="env"/>
          </exec>
          <echo message="Install PIP into the virtual environment."/>
          <exec executable="./env/bin/easy_install" failonerror="true">
            <arg line="-q pip"/>
          </exec>
          <echo message="Sourcing the virtual environment."/>
          <property name="sysenv.PATH" value="${basedir}/env/lib/python2.6/site-packages:%{sysenv.PATH}"/>
          <property name="sysenv.PYTHON_EGG_CACHE" value="${basedir}/env/.python-eggs:%{sysenv.PYTHON_EGG_CACHE}"/>
          <echo message="Install dependencies into the virtual environment. Please wait..."/>
          <exec executable="./env/bin/pip" failonerror="true">
            <arg line="install -q -E env -r ./deps.txt"/>
          </exec>
          <echo message="Source environment with: . ./env/bin/activate"/>
          <echo message="Use deactivate to disable virtual environment."/>
        </sequential>
      </then>
    </if>

  </target>

  <target name="configure">
    <condition property="not_user_configuration">
      <not>
        <available file="${basedir}/project.user.properties" type="file"/>
      </not>
    </condition>

    <if> <!-- ant-contrib -->
      <isset property="not_user_configuration"/>
      <then>
        <copy file="${basedir}/tpls/project_user.template"
              tofile="${basedir}/project.user.properties"
              overwrite="false" encoding="utf-8"/>
        <fail message="Please, edit your project.user.properties before any actions!"/>
      </then>
    </if>

    <make_prop_file filename="${basedir}/${cumulative_config}"/>
    <mkdir dir="${basedir}/conf/"/>

    <parse_template src="${basedir}/tpls/logrotate.template"
                    dst="${basedir}/conf/django.logrotate"
                    params="${basedir}/${cumulative_config}"/>

    <parse_template src="${basedir}/tpls/httpd_vhosts.template"
                    dst="${basedir}/conf/httpd-vhosts.conf"
                    params="${basedir}/${cumulative_config}"/>

    <parse_template src="${basedir}/tpls/django_wsgi.template"
                    dst="${basedir}/conf/django.wsgi"
                    params="${basedir}/${cumulative_config}"/>

    <parse_template src="${basedir}/tpls/django_settings.template"
                    dst="${basedir}/src/settings.py"
                    params="${basedir}/${cumulative_config}"/>

    <if>
      <equals arg1="${db_engine}" arg2="django.db.backends.mysql"/>
      <then>
        <parse_template src="${basedir}/tpls/db_mysql_create.template"
                        dst="${basedir}/conf/db_mysql_create.sql"
                        params="${basedir}/${cumulative_config}"/>

        <parse_template src="${basedir}/tpls/db_mysql_drop.template"
                        dst="${basedir}/conf/db_mysql_drop.sql"
                        params="${basedir}/${cumulative_config}"/>
      </then>
    </if>
  </target>

  <target name="build">
    <exec executable="tar" failonerror="true">
      <arg line="cjf ../djbookru.tar.bz2 ./src ./lib ./conf/django.wsgi ./deps.txt"/>
    </exec>
  </target>

  <target name="clean">
    <delete verbose="true">
      <fileset dir="." defaultexcludes="no">
        <exclude name="env/**/*"/> <!-- environment -->
        <include name="**/*~"/> <!-- emacs -->
        <include name="**/*.pyc"/> <!-- python -->

      </fileset>
    </delete>
    <delete file="${basedir}/${cumulative_config}" quiet="yes"/>
    <delete file="${basedir}/src/settings.py" quiet="yes"/>
    <delete file="${basedir}/pip-log.txt" quiet="yes"/>
    <delete includeemptydirs="true" quiet="yes">
      <fileset dir="conf"/>
    </delete>
  </target>

  <target name="dropenv">
    <delete dir="env" includeemptydirs="true" quiet="yes"/>
    <delete file="${basedir}/distribute-0.6.10.tar.gz" quiet="yes"/>
  </target>

</project>
